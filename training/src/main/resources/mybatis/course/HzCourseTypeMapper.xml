<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuanyuan.training.project.course.mapper.HzCourseTypeMapper">
    
    <resultMap type="HzCourseType" id="HzCourseTypeResult">
        <result property="id"    column="id"    />
        <result property="typeName"    column="type_name"    />
        <result property="typeDescribe"    column="type_describe"    />
        <result property="sort"    column="sort"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="delFlag"    column="del_flag"    />
    </resultMap>

    <sql id="selectHzCourseTypeVo">
        select id, type_name, type_describe, sort, create_by, create_time, update_by, update_time, remark, del_flag from hz_course_type
    </sql>

    <select id="selectHzCourseTypeList" parameterType="HzCourseType" resultMap="HzCourseTypeResult">
        <include refid="selectHzCourseTypeVo"/>
        <where>  
            <if test="typeName != null  and typeName != ''"> and type_name like concat('%', #{typeName}, '%')</if>
        </where>
    </select>
    
    <select id="selectHzCourseTypeById" parameterType="Long" resultMap="HzCourseTypeResult">
        <include refid="selectHzCourseTypeVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertHzCourseType" parameterType="HzCourseType" useGeneratedKeys="true" keyProperty="id">
        insert into hz_course_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="typeName != null  and typeName != ''">type_name,</if>
            <if test="typeDescribe != null  and typeDescribe != ''">type_describe,</if>
            <if test="sort != null ">sort,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="remark != null  and remark != ''">remark,</if>
            <if test="delFlag != null  and delFlag != ''">del_flag,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="typeName != null  and typeName != ''">#{typeName},</if>
            <if test="typeDescribe != null  and typeDescribe != ''">#{typeDescribe},</if>
            <if test="sort != null ">#{sort},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="remark != null  and remark != ''">#{remark},</if>
            <if test="delFlag != null  and delFlag != ''">#{delFlag},</if>
         </trim>
    </insert>

    <update id="updateHzCourseType" parameterType="HzCourseType">
        update hz_course_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="typeName != null  and typeName != ''">type_name = #{typeName},</if>
            <if test="typeDescribe != null  and typeDescribe != ''">type_describe = #{typeDescribe},</if>
            <if test="sort != null ">sort = #{sort},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
            <if test="delFlag != null  and delFlag != ''">del_flag = #{delFlag},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteHzCourseTypeById" parameterType="Long">
        delete from hz_course_type where id = #{id}
    </delete>

    <delete id="deleteHzCourseTypeByIds" parameterType="String">
        delete from hz_course_type where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>